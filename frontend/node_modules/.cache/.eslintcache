[{"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\index.js":"1","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\App.js":"2","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\Store\\index.js":"3","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\header.js":"4","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\ProductInfo\\cart.js":"5","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\ProductInfo\\viewOrders.js":"6","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\ProductInfo\\orderHistory.js":"7","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\ProductInfo\\productinfo.js":"8","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\authentication\\register.js":"9","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\authentication\\login.js":"10","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\Profile\\profile.js":"11","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\Profile\\updateProfile.js":"12","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\home_Pages\\Admin.js":"13","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\Profile\\updatePWD.js":"14","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\home_Pages\\Products.js":"15","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\products\\addProduct.jsx":"16","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\products\\updateProduct.jsx":"17","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\rate&Review\\RateForm.jsx":"18","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\rate&Review\\RateFormSeller.jsx":"19","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\payment\\dummyPayment.jsx":"20"},{"size":332,"mtime":1743057895784,"results":"21","hashOfConfig":"22"},{"size":4425,"mtime":1745397003567,"results":"23","hashOfConfig":"22"},{"size":1354,"mtime":1743057895777,"results":"24","hashOfConfig":"22"},{"size":3296,"mtime":1745398175689,"results":"25","hashOfConfig":"22"},{"size":7072,"mtime":1745386809152,"results":"26","hashOfConfig":"22"},{"size":2216,"mtime":1745399588064,"results":"27","hashOfConfig":"22"},{"size":1773,"mtime":1745399554663,"results":"28","hashOfConfig":"22"},{"size":2144,"mtime":1743057895774,"results":"29","hashOfConfig":"22"},{"size":3072,"mtime":1744440035954,"results":"30","hashOfConfig":"22"},{"size":2030,"mtime":1745347781742,"results":"31","hashOfConfig":"22"},{"size":6658,"mtime":1745398277441,"results":"32","hashOfConfig":"22"},{"size":2958,"mtime":1745388525041,"results":"33","hashOfConfig":"22"},{"size":1862,"mtime":1743057895779,"results":"34","hashOfConfig":"22"},{"size":2730,"mtime":1745389685334,"results":"35","hashOfConfig":"22"},{"size":2509,"mtime":1745351850861,"results":"36","hashOfConfig":"22"},{"size":4516,"mtime":1743057895781,"results":"37","hashOfConfig":"22"},{"size":4880,"mtime":1745390203964,"results":"38","hashOfConfig":"22"},{"size":2580,"mtime":1743057895782,"results":"39","hashOfConfig":"22"},{"size":2736,"mtime":1743057895783,"results":"40","hashOfConfig":"22"},{"size":5387,"mtime":1745387479412,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"swnqup",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"45"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"45"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"45"},"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\index.js",[],[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\App.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\Store\\index.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\header.js",["110"],[],"import React , {useEffect, useState} from \"react\";\r\nimport \"../assets/styles/header.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { authActions } from \"./Store\";\r\n\r\n\r\nconst Header = () => {\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  const quantity = useSelector((state) => state.cart.quantity);\r\n\r\n  //console.log(cart)\r\n\r\n  const navigate = useNavigate();\r\n\r\nconst [role, setRole] = useState('');  \r\nconst dispatch = useDispatch();\r\nconst sendLogoutReq = async () => {\r\n  try {\r\n    const res = await axios.post(\"http://localhost:8090/User/logout\", {}, { withCredentials: true });\r\n    if (res.status === 200) {\r\n      return res;\r\n    }\r\n    throw new Error(\"Unable To Logout. Please try again\");\r\n  } catch (err) {\r\n    console.error(\"Logout failed:\", err);\r\n    // Optionally, redirect to login or show a message\r\n  }\r\n};\r\n\r\n  const handleLogout = () => {\r\n    sendLogoutReq().then(() => dispatch(authActions.logout()));\r\n    \r\n  };\r\n\r\n          useEffect(() => {\r\n            const getProductById = () => {\r\n              axios\r\n              .get(`http://localhost:8090/User/profile`).then((res) => {\r\n                setRole(res.data.user.role);\r\n                console.log(res.data.user.role)\r\n                //console.log(res.data);\r\n              });\r\n            };\r\n            getProductById();\r\n          }, [isLoggedIn]);\r\n          console.log(role)\r\n  return (\r\n    <div>\r\n      <header className=\"header\">\r\n        <div className=\"header__logo\">\r\n          <img src=\"https://i.postimg.cc/d3qbx7SW/AyuLogo.png\" alt=\"Logo\" />\r\n          <h1 className=\"header__title\">AyurHerb Store</h1>\r\n        </div>\r\n\r\n        <nav className=\"header__nav\">\r\n          <ul className=\"header__list\">\r\n            {!isLoggedIn && (\r\n              <>\r\n                <li className=\"header__item\">\r\n                  <Link className=\"login\" to=\"./login\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"header__item\">\r\n                  <Link className=\"register\" to=\"./signUp\">\r\n                    Sign Up\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            )}\r\n            \r\n            <li className=\"header__item\">\r\n              {isLoggedIn && (\r\n                <Link onClick={handleLogout} className=\"logout\" to=\"./login\">\r\n                  Log Out\r\n                </Link>\r\n              )}\r\n             \r\n              <Link to=\"./cart\">\r\n                {isLoggedIn && role === 'buyer' &&(\r\n                  <div>\r\n                    <span className=\"badge bg-primary\">{quantity}</span>\r\n                    <i className=\"bi bi-cart-fill\"></i>\r\n                  </div>\r\n                )}\r\n              </Link>\r\n\r\n              {isLoggedIn && role === 'buyer' && (\r\n                <Link className=\"orderHistory\" to=\"./getOrders\">\r\n                  Order Hisory\r\n                </Link>\r\n              )}\r\n              <br />\r\n              <span>{isLoggedIn && role === 'buyer' && <Link to=\"./profile\">Profile</Link>}</span>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\ProductInfo\\cart.js",["111","112"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../assets/styles/cart.css?v1\";\r\nimport axios from \"axios\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst KEY =\r\n  \"pk_test_51Q5kUrKs4ldJ96PWJsuoDCG9WwlLqb5rS6eBXsrdEGMMifKnRIrabnhta1MvPcabDAZEsuf3lK4V3I01d7eUcvWp00o91jsc6s\";\r\n\r\nconst Cart = () => {\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const [stripeToken, setStripeToken] = useState(null);\r\n  const [deliveryType, setDeliveryType] = useState();\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [cheapDelivery, setCheapDelivery] = useState();\r\n  const [fastDelivery, setFastDelivery] = useState();\r\n  const [deliveryCharge, setDeliveryCharge] = useState();\r\n  const [finalTotal, setFinalTotal] = useState();\r\n  const [cheapDeliveryTime, setCheapDeliveryTime] = useState();\r\n  const [fastDeliveryTime, setFastDeliveryTime] = useState();\r\n  const [visibility, setVisibility] = useState(false);\r\n\r\n  const getDeliveryPrices = async () => {\r\n    console.log(\"function called\");\r\n    const randomWeight = (Math.random() * 4.9) + 1.0;\r\n\r\n    const deliveryData = {\r\n      \"shipfrom\": \"Colombo\",\r\n      \"shipto\": address,\r\n      \"weight\": randomWeight\r\n    };\r\n\r\n    const deliveryResult = await axios.post(\"http://localhost:8300/delivery/rate\", deliveryData);\r\n    console.log(deliveryResult.data);\r\n    setVisibility(\"block\");\r\n\r\n    setCheapDelivery(deliveryResult.data.cheapDelivery.rate /10);\r\n    setFastDelivery(deliveryResult.data.fastDelivery.rate / 10);\r\n    setCheapDeliveryTime(deliveryResult.data.cheapDelivery.duration);\r\n    setFastDeliveryTime(deliveryResult.data.fastDelivery.duration);\r\n  };\r\n\r\n  const handleOptionChange = (event) => {\r\n    setDeliveryType(event.target.value);\r\n    setFinalTotal(cart.withCommision + deliveryCharge);\r\n    setDeliveryCharge(deliveryType == \"fast\" ? cheapDelivery: fastDelivery);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(()=>{\r\n    console.log(address);\r\n    console.log(deliveryCharge);\r\n    setFinalTotal(cart.withCommision);\r\n    console.log(finalTotal);\r\n  },[cheapDelivery, fastDelivery, address, deliveryCharge, finalTotal])\r\n\r\n  const onToken = (token) => {\r\n    setStripeToken(token);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const makeRequest = async () => {\r\n      try {\r\n        const res = await axios.post(\"http://localhost:8020/Order/payment\", {\r\n          tokenId: stripeToken.id,\r\n\r\n          amount: cart.total,\r\n        });\r\n\r\n        console.log(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    stripeToken && makeRequest();\r\n  }, [stripeToken, cart.total]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const orderData = {\r\n      products: cart.products.map((product) => ({\r\n        productId: product._id,\r\n        name: product.name,\r\n        quantity: product.quantity,\r\n      })),\r\n\r\n      amount: cart.withCommision,\r\n\r\n      status: \"pending\",\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:8020/Order/addOrder\",\r\n        orderData\r\n      );\r\n      console.log(orderData);\r\n      console.log(res.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Shopping Cart</h1><br></br>\r\n        <table>\r\n          <th>\r\n            <center>Product</center>\r\n          </th>\r\n          <th>\r\n            <center>Quantity</center>\r\n          </th>\r\n          <th>\r\n            <center>Price</center>\r\n          </th>\r\n\r\n          {cart.products.map((product) => (\r\n            <tbody>\r\n              <td>{product.name}</td>\r\n              <td>{product.quantity}</td>\r\n              <td>\r\n                {product.quantity}*{product.price}\r\n              </td>\r\n            </tbody>\r\n          ))}\r\n          <tfoot>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <div class=\"input-group mb-3\">\r\n              <input type=\"text\" class=\"form-input\" placeholder=\"Address\" aria-label=\"Address\" \r\n                onChange={(e)=>setAddress(e.target.value)}\r\n              />\r\n              <button type=\"button\" id=\"button-addon2\" onClick={getDeliveryPrices} >Get Prices for Destination</button>\r\n            </div>\r\n\r\n            <div style={{ visibility: visibility ? \"visible\" : \"hidden\" }}>            \r\n            <div class=\"form-check\" >\r\n              <input class=\"form-check-input\" type=\"radio\" name=\"delivery\" id=\"fastDelivery\" value=\"fast\"\r\n                checked={deliveryType === \"fast\"}\r\n                onChange={handleOptionChange}\r\n               />\r\n              <label class=\"form-check-label\" for=\"fastDelivery\">\r\n                Fast Delivery: Rs.{fastDelivery}, {fastDeliveryTime} hrs\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <input class=\"form-check-input\" type=\"radio\" name=\"delivery\" id=\"cheapDelivery\" value=\"cheap\" \r\n                checked={deliveryType === \"cheap\"}\r\n                onChange={handleOptionChange}\r\n              />\r\n              <label class=\"form-check-label\" for=\"cheapDelivery\">\r\n                Cheap Delivery: Rs.{cheapDelivery}, {cheapDeliveryTime} days\r\n              </label>\r\n            </div>\r\n            </div>\r\n        <br />\r\n            <h2>Order Summary</h2>\r\n            <br></br>\r\n            <tr>\r\n              <th className=\"cart-total\">Cart Total:</th>\r\n              <td className=\"cart-total\">\r\n                <strong>{cart.total}</strong>\r\n              </td>\r\n\r\n              <th className=\"cart-total\">With Commission:</th>\r\n              <td className=\"cart-total\">\r\n                <strong>{cart.withCommision}</strong>\r\n              </td>\r\n\r\n              <th className=\"cart-total\">Delivery Charges:</th>\r\n              <td className=\"cart-total\">\r\n                <strong>{deliveryCharge}</strong>\r\n              </td>\r\n\r\n              <th className=\"cart-total\">Total:</th>\r\n              <td className=\"cart-total\">\r\n                <strong>{finalTotal}</strong>\r\n              </td>\r\n\r\n              <th className=\"cart-total\">Item Count:</th>\r\n              <td className=\"cart-total\">\r\n                <strong>{cart.products.length}</strong>\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n\r\n        <br />\r\n        <br />\r\n\r\n        <StripeCheckout\r\n          name=\"engada kada Shop\"\r\n          image\r\n          src=\"https://i.postimg.cc/d3qbx7SW/AyuLogo.png\"\r\n          description={`Your total is Rs. ${cart.total}`}\r\n          amount={cart.total * 100}\r\n          token={onToken}\r\n          stripeKey={KEY}\r\n        >\r\n          <button type=\"submit\">CheckOut with Strip</button>\r\n        </StripeCheckout>\r\n      \r\n{/* <button type=\"submit\">CheckOut with Stripe</button> */}\r\n<button type=\"submit\" onClick={()=>navigate('/dummyPayment')}>CheckOut with Dummy</button>\r\n\r\n</form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n\r\n\r\n","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\ProductInfo\\viewOrders.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\ProductInfo\\orderHistory.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\ProductInfo\\productinfo.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\authentication\\register.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\authentication\\login.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\Profile\\profile.js",["113"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport {useNavigate} from 'react-router-dom'\r\nimport '../../assets/styles/profile.css'\r\nimport ViewOrders from '../ProductInfo/viewOrders';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst Profile = () =>{\r\n\r\n  const [user, setUser] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const handleUpdate = (productId) => {\r\n    navigate(`/updateProduct/${productId}`);\r\n  };\r\n  \r\n  const handleViewOrders = () => {\r\n    navigate('/viewOrders'); \r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const sendRequest = async () => {\r\n    const res = await axios\r\n      .get(\"http://localhost:8090/User/profile\", {\r\n        withCredentials: true,\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    const data = await res.data;\r\n    return data;\r\n  };\r\n\r\n  const sendProductRequest = async (sellerId) => {\r\n    const res = await axios\r\n      .get(`http://localhost:8070/products/${sellerId}/products`, {\r\n        withCredentials: true,\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    const data = await res.data;\r\n    return data;\r\n  };\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    sendRequest().then((data)=>{setUser(data.user)\r\n    sendProductRequest(data.user._id).then((data)=>setProducts(data))\r\n  })}, [])\r\n\r\n  const handleDeleteAcc = () => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to delete your account?\",\r\n      icon: \"warning\",\r\n      dangerMode: true\r\n    }).then((willDelete)=>{\r\n      if(willDelete){\r\n        swal({\r\n          title: \"Your account is being deleted\",\r\n          icon: \"info\",\r\n          buttons: false,\r\n          timer: 2000\r\n        });\r\n        \r\n        axios.delete(\"http://localhost:8090/User/deleteUser\")\r\n          .then(() => {\r\n            swal({\r\n              title: \"Your account has been deleted\",\r\n              icon: \"success\",\r\n              buttons: false,\r\n              timer: 2000\r\n            }).then(() => {\r\n              setTimeout(() => {\r\n                window.location.href = \"/login\";\r\n              }, 1500); // navigate to login page after 2 seconds\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            swal({\r\n              title: \"An error occurred while deleting your account\",\r\n              icon: \"error\",\r\n              buttons: false,\r\n              timer: 2000\r\n            });\r\n          });\r\n      }else{\r\n        swal({\r\n          title: \"Your account is saved\",\r\n          buttons: false,\r\n          timer: 2000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleDelete = (product_id) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You want to delete this Product?\",\r\n      icon: \"warning\",\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        swal(\"Product is deleted\", {\r\n          icon: \"success\",\r\n          buttons: false,\r\n          timer: 2000,\r\n        });\r\n\r\n        axios.delete(\r\n          `http://localhost:8070/products/deleteProduct/${product_id}`\r\n        );\r\n\r\n        console.log(product_id);\r\n\r\n        const newProductlist = products.filter(\r\n          (product) => product._id !== product_id\r\n        );\r\n\r\n        setProducts(newProductlist);\r\n      } else {\r\n        swal({\r\n          text: \"Your Products is saved!\",\r\n          buttons: false,\r\n          timer: 2000,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>{user &&(<div>\r\n      <h1>Name:{user.name}</h1>\r\n      <h1>Mobile:{user.mobile}</h1>\r\n      <h1>E-mail:{user.email}</h1>\r\n      <h1>Address:{user.address}</h1>\r\n      <h1>I am a {user.role}</h1>\r\n      </div>)}\r\n      <br/>\r\n      \r\n{user.role === 'seller' && (\r\n  <button\r\n    className=\"btn btn-danger btn-small-width float-end\"\r\n    onClick={handleViewOrders}\r\n  >\r\n    View Orders\r\n  </button>\r\n)}\r\n\r\n<button className=\"btn btn-info p-1 me-2 btn-small-width\" onClick={()=>navigate(`/updateUser/${user._id}`)}>UPDATE ACC</button>\r\n\r\n<button className=\"btn btn-info p-1 me-2 btn-small-width\" onClick={()=>navigate(`/updatePWD/${user._id}`)}>UPDATE PASSWORD</button>\r\n\r\n<button className=\"btn btn-danger btn-small-width float-end\" onClick={handleDeleteAcc}>DELETE ACC</button>\r\n<br/>\r\n<br/>\r\n\r\n{user.role===\"seller\" && (<div>\r\n<button className=\"btn btn-primary p-1 me-2\" onClick={()=>navigate(\"/addProduct\")}>ADD PRODUCT</button>\r\n      <h2><center>MY PRODUCTS</center></h2>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>\r\n              <center>ID</center>\r\n            </th>\r\n            <th>\r\n              <center>Name</center>\r\n            </th>\r\n            <th>\r\n              <center>Brand</center>\r\n            </th>\r\n            <th>\r\n              <center>Price</center>\r\n            </th>\r\n            <th>\r\n              <center>Description</center>\r\n            </th>\r\n            <th>\r\n              <center>weight</center>\r\n            </th>\r\n            <th>\r\n              <center>Actions</center>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {products.length > 0 && (\r\n            <>\r\n              {products.map((myProduct) => (\r\n                <tr key={myProduct._id}>\r\n                  <td>\r\n                    <center>{myProduct._id}</center>\r\n                  </td>\r\n                  <td>\r\n                    <center>{myProduct.name}</center>\r\n                  </td>\r\n                  <td>\r\n                    <center>{myProduct.brand}</center>\r\n                  </td>\r\n                  <td>\r\n                    <center>{myProduct.price}</center>\r\n                  </td>\r\n                  <td>\r\n                    <center>{myProduct.description}</center>\r\n                  </td>\r\n                  <td>\r\n                    <center>{myProduct.weight}</center>\r\n                  </td>\r\n                  <th>\r\n                    <center>\r\n                     <button\r\n  className=\"btn btn-info p-1 me-2\"\r\n  onClick={() => handleUpdate(myProduct._id)}\r\n>\r\n  Update\r\n</button>\r\n\r\n                      <button\r\n                        className=\"btn btn-danger p-1 me-2\"\r\n                        onClick={() => handleDelete(myProduct._id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </center>\r\n                  </th>\r\n                </tr>\r\n              ))}\r\n            </>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      :<h1><center>There is no any Products</center></h1>\r\n      </div>)}  \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\Profile\\updateProfile.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\home_Pages\\Admin.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\Profile\\updatePWD.js",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\home_Pages\\Products.js",["114"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"../../assets/styles/product.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nconst Products = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      try {\r\n        axios.get(\"http://localhost:8070/products/getProducts\", { withCredentials: true })\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            setProducts(res.data);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUsers();\r\n  }, []);\r\n\r\n  const searchProduct = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const searchValue = e.target.value;\r\n    try {\r\n      const { data } = await axios.get(\r\n        `http://localhost:8070/products/search/?search=${searchValue}`\r\n      );\r\n\r\n      console.log(data);\r\n      setProducts(data.data.products);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home container\">\r\n      <h1>Products page</h1>\r\n\r\n      <form className=\"form-inline my-2 my-lg-0\">\r\n        <input\r\n          className=\"form-control mr-sm-2\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          onChange={searchProduct}\r\n          name=\"search\"\r\n        />\r\n      </form>\r\n\r\n      <div className=\"home-products container\">\r\n      <div className=\"product-tiles\">\r\n      {products.map((product, key) => (\r\n          \r\n          <div className=\"product-tile\" key={key}>\r\n            \r\n            <img src={product.image}/>\r\n            <p>Name:{product.name}</p>\r\n            <p>\r\n  Restaurant: {product.sellerName} <br />\r\n  <span style={{color: product.sellerAvailable ? \"green\" : \"red\"}}>\r\n    {product.sellerAvailable ? \"Available\" : \"Not Available\"}\r\n  </span>\r\n</p>\r\n\r\n            <button\r\n              className=\"btn btn-info p-1 me-2\"\r\n              onClick={() => navigate(`/getProduct/${product._id}`)}\r\n            >\r\n              INFO\r\n            </button>\r\n            <button\r\n              className=\"btn btn-success p-1 me-2\"\r\n              onClick={() => navigate(`/rateBuyer/${product._id}`)}\r\n            >\r\n              ⭐⭐⭐\r\n            </button>\r\n\r\n            <br />\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\products\\addProduct.jsx",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\products\\updateProduct.jsx",[],[],"C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\rate&Review\\RateForm.jsx",["115"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport axios from \"axios\";\r\nimport swal from 'sweetalert';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst RateForm = () => {\r\n  const [rateType, setRateType] = useState(\"product\");\r\n  const [rateId, setRateId] = useState(\"\");\r\n  const [rateValue, setRateValue] = useState(0);\r\n  const [review, setReview] = useState(\"\");\r\n\r\n  const {id} = useParams();\r\n\r\n  useEffect(()=>{\r\n    setRateId(id)\r\n\r\n  }, [id])\r\n\r\n  useEffect(()=>{\r\n    document.getElementById(\"rateHead\").innerHTML = \r\n    `\r\n    Rate ${rateType} <br />\r\n    ${rateType}Id: ${rateId}\r\n    `;\r\n  },[rateType, rateId]);\r\n\r\n  useEffect(()=>{\r\n    document.getElementById(\"rateValue\").innerHTML = \r\n      `\r\n        Rate for: ${rateType} <br />\r\n        Rating: ${rateValue} <br />\r\n        Review: ${review}\r\n      `;\r\n  },[rateType, rateId, rateValue, review])\r\n\r\n  const submitData = async (event)=>{\r\n    event.preventDefault();\r\n\r\n    if(rateValue !== 0){\r\n      const reviewData = {\r\n        product_id:id,\r\n        rate: rateValue,\r\n        reviews: review\r\n      }\r\n      const response = await axios.post(\"http://localhost:8079/review/addReview\", reviewData, {\r\n        withCredentials: true\r\n      });\r\n      if(response.status === 201){\r\n        swal({\r\n          title: \"SuccessFul\",\r\n          text: \"Rate and Review was added Sucessfully\",\r\n          icon: \"success\"\r\n        });\r\n      }else{\r\n        console.log(\"error\");\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Rate posting failed\",\r\n          icon: \"error\"\r\n        });\r\n      }\r\n    }else{\r\n      console.log(\"Rate cannot be null\");\r\n      swal({\r\n        title: \"Invalid\",\r\n        text: \"Rate is Required. Please select from stars\",\r\n        icon: \"warning\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return(\r\n    <div className=\"m-5 p-5\">\r\n      <h2 id=\"rateHead\" className=\"px-3\">Rate</h2>\r\n      <p id=\"rateValue\"></p>\r\n      <form onSubmit={submitData}>\r\n        <ReactStars\r\n          count={5}\r\n          value={rateValue}\r\n          onChange={(value) => setRateValue(value)}\r\n          size={50}\r\n          activeColor=\"#ffd700\"\r\n\r\n        /><h4>Add comment!</h4><br />\r\n        <textarea \r\n          style={{height: '200px', width: \"80%\"}}\r\n          onChange={(event) => setReview(event.target.value)}\r\n        /> <br />\r\n        <button type=\"submit\"  style={{ marginTop: '20px',  width: '200px',marginLeft: '50px',fontSize: '20px',  }}>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default RateForm;","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\rate&Review\\RateFormSeller.jsx",["116"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport axios from \"axios\";\r\nimport swal from 'sweetalert';\r\nimport '../../assets/styles/profile.css'\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst RateFormSeller = () => {\r\n  const [rateType, setRateType] = useState(\"seller\");\r\n  const [rateId, setRateId] = useState(\"\");\r\n  const [rateValue, setRateValue] = useState(0);\r\n  const [review, setReview] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const {sellerName, id} = useParams();\r\n  //const {name} = useParams();\r\n\r\n // console.log(sellerName)\r\n\r\n  useEffect(()=>{\r\n    setRateId(id)\r\n\r\n  }, [id])\r\n\r\n  useEffect(()=>{\r\n    document.getElementById(\"rateHead\").innerHTML = \r\n    `\r\n    Rate ${rateType} <br />\r\n    ${rateType}Id: ${rateId}\r\n    `;\r\n  },[rateType, rateId]);\r\n\r\n  useEffect(()=>{\r\n    document.getElementById(\"rateValue\").innerHTML = \r\n      `\r\n        Rate for: ${rateType} <br />\r\n        Rating: ${rateValue} <br />\r\n        Review: ${review}\r\n      `;\r\n  },[rateType, rateId, rateValue, review])\r\n\r\n  const submitData = async (event)=>{\r\n    event.preventDefault();\r\n\r\n    if(rateValue !== 0){\r\n      const reviewData = {\r\n        product_id:id,\r\n        rate: rateValue,\r\n        reviews: review\r\n      }\r\n      const response = await axios.post(\"http://localhost:8079/review/addReview\", reviewData, {\r\n        withCredentials: true\r\n      });\r\n      if(response.status === 201){\r\n        swal({\r\n          title: \"SuccessFul\",\r\n          text: \"Rate and Review was added Sucessfully\",\r\n          icon: \"success\"\r\n        },\r\n        navigate('/products'));\r\n      }else{\r\n        console.log(\"error\");\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Rate posting failed\",\r\n          icon: \"error\"\r\n        }\r\n        );\r\n      }\r\n    }else{\r\n      console.log(\"Rate cannot be null\");\r\n      swal({\r\n        title: \"Invalid\",\r\n        text: \"Rate is Required. Please select from stars\",\r\n        icon: \"warning\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return(\r\n    <div className=\"m-5 p-5\">\r\n      <h2>Seller Name : {sellerName}</h2>\r\n      <h2 id=\"rateHead\" className=\"px-3\">Rate</h2>\r\n      <p id=\"rateValue\"></p>\r\n      <form onSubmit={submitData}>\r\n        <ReactStars\r\n          count={5}\r\n          value={rateValue}\r\n          onChange={(value) => setRateValue(value)}\r\n          size={50}\r\n          activeColor=\"#ffd700\"\r\n        /> <br />\r\n        <textarea \r\n          style={{height: '200px', width: \"80%\"}}\r\n          onChange={(event) => setReview(event.target.value)}\r\n        /> <br />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default RateFormSeller;","C:\\Users\\PIRUTHIVI K\\Desktop\\food\\Y3S2_DS_Project\\frontend\\src\\components\\payment\\dummyPayment.jsx",["117","118"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\nimport swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n//import '../../assets/images/AddProducts.css';\r\n\r\nexport default function AddPayment() {\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const [payments, setPayemtns] = useState({\r\n        email: \"\", \r\n        mobile: \"\",\r\n        number: \"\",\r\n        expiration: \"\",\r\n        cvv: \"\",\r\n        name: \"\",\r\n        amount:\"\",\r\n  });\r\n\r\n  const handleChangeText = (name, value) => {\r\n    setPayemtns({ ...payments, [name]: value.target.value });\r\n    console.log(payments);\r\n  };\r\n\r\nconst newPayment = {\r\n  email:payments.email,\r\n  mobile:payments.mobile,\r\n  card:{\r\n    number:payments.number,\r\n    expiration:payments.expiration,\r\n    cvv:payments.cvv,\r\n    name:payments.name\r\n  },\r\n  amount:payments.amount\r\n\r\n}\r\n\r\n\r\n\r\nconst AddPayment = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    // 1. Make dummy payment\r\n    const paymentRes = await axios.post(\"http://localhost:8500/payment/card\", newPayment, { withCredentials: true });\r\n    swal.fire(`Payment Successful`);\r\n\r\n    // 2. Now create the order (just like Stripe flow)\r\n    const orderData = {\r\n      products: cart.products.map((product) => ({\r\n        productId: product._id,\r\n        name: product.name,\r\n        quantity: product.quantity,\r\n      })),\r\n      amount: cart.withCommision,\r\n      status: \"pending\",\r\n    };\r\n    const orderRes = await axios.post(\"http://localhost:8020/Order/addOrder\", orderData, { withCredentials: true });\r\n\r\n    // 3. Navigate to order history or show success\r\n    navigate(\"/getOrders\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    swal.fire(`Payment or Order Failed`);\r\n  }\r\n};\r\n\r\n  const navigate = useNavigate();\r\n  return (\r\n    \r\n    <Container fluid>\r\n       <h1 className=\"mb-4\">Payment</h1>\r\n      <Form onSubmit={AddPayment}>\r\n        \r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col}  controlId=\"formBasicEmail\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control \r\n                name=\"email\"\r\n                type=\"email\" \r\n                placeholder=\"Email\"   \r\n                title=\"Email must be required\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"email\", val)}/>\r\n            \r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formBasicMobile\">\r\n            <Form.Label>Mobile</Form.Label>\r\n            <Form.Control \r\n                name=\"mobile\"\r\n                type=\"number\" \r\n                placeholder=\"Mobile\"   \r\n                title=\"Mobile must be required\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"mobile\", val)}/>\r\n          </Form.Group>\r\n        </Row> \r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col}  controlId=\"formBasicNumber\">\r\n            <Form.Label>Credit Card Number</Form.Label>\r\n            <Form.Control \r\n                name=\"number\"\r\n                type=\"text\" \r\n                placeholder=\"xxxx xxxx xxxx xxxx\"   \r\n                title=\"Number must be required\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"number\", val)}/>\r\n            \r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formBasicExpiration\">\r\n            <Form.Label>Expire In</Form.Label>\r\n            <Form.Control \r\n                name=\"expiration\"\r\n                type=\"text\" \r\n                placeholder=\"eg:01/25(mm/yy)\"   \r\n                title=\"expiration must be required\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"expiration\", val)}/>\r\n          </Form.Group>\r\n        </Row> \r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col}  controlId=\"formBasicCCV\">\r\n            <Form.Label>CVV</Form.Label>\r\n            <Form.Control \r\n                name=\"cvv\"\r\n                type=\"number\" \r\n                placeholder=\"CVV\"   \r\n                title=\"Upload Date must be required\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"cvv\", val)}/>\r\n            \r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formBasicaName\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control \r\n                name=\"name\"\r\n                type=\"text\" \r\n                placeholder=\"Name\"   \r\n                title=\"Name must be required\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"name\", val)}/>\r\n          </Form.Group>\r\n        </Row> \r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupAmount\">\r\n        <Form.Label>Amount (Rs. )</Form.Label>\r\n            <Form.Control \r\n                name=\"amount\"\r\n                type=\"number\" \r\n                placeholder=\"Amount\"   \r\n                title=\"Amount must be required\"\r\n                onChange={(val) => handleChangeText(\"amount\", val)}/>\r\n      </Form.Group>  \r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n         \r\n        </Form>\r\n        </Container>\r\n  );\r\n}",{"ruleId":"119","severity":1,"message":"120","line":16,"column":9,"nodeType":"121","messageId":"122","endLine":16,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":49,"column":36,"nodeType":"125","messageId":"126","endLine":49,"endColumn":38},{"ruleId":"127","severity":1,"message":"128","line":59,"column":5,"nodeType":"129","endLine":59,"endColumn":71,"suggestions":"130"},{"ruleId":"119","severity":1,"message":"131","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":65,"column":13,"nodeType":"134","endLine":65,"endColumn":39},{"ruleId":"119","severity":1,"message":"135","line":8,"column":20,"nodeType":"121","messageId":"122","endLine":8,"endColumn":31},{"ruleId":"119","severity":1,"message":"135","line":9,"column":20,"nodeType":"121","messageId":"122","endLine":9,"endColumn":31},{"ruleId":"119","severity":1,"message":"136","line":50,"column":11,"nodeType":"121","messageId":"122","endLine":50,"endColumn":21},{"ruleId":"119","severity":1,"message":"137","line":63,"column":11,"nodeType":"121","messageId":"122","endLine":63,"endColumn":19},"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cart.withCommision'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'ViewOrders' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setRateType' is assigned a value but never used.","'paymentRes' is assigned a value but never used.","'orderRes' is assigned a value but never used.",{"desc":"139","fix":"140"},"Update the dependencies array to be: [cheapDelivery, fastDelivery, address, deliveryCharge, finalTotal, cart.withCommision]",{"range":"141","text":"142"},[2175,2241],"[cheapDelivery, fastDelivery, address, deliveryCharge, finalTotal, cart.withCommision]"]