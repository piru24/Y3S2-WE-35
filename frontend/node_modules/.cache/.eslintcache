[{"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\index.js":"1","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\App.js":"2","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\payment\\dummyPayment.jsx":"3","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\rate&Review\\RateFormSeller.jsx":"4","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\rate&Review\\RateForm.jsx":"5","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\products\\updateProduct.jsx":"6","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\products\\addProduct.jsx":"7","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Store\\index.jsx":"8","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\header.jsx":"9","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\authentication\\login.jsx":"10","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\authentication\\register.jsx":"11","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Profile\\profile.jsx":"12","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Profile\\updateProfile.jsx":"13","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\home_Pages\\Admin.jsx":"14","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Profile\\updatePWD.jsx":"15","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\home_Pages\\Products.jsx":"16","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ProductInfo\\productinfo.jsx":"17","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ProductInfo\\orderHistory.jsx":"18","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ProductInfo\\cart.jsx":"19","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ProductInfo\\viewOrders.jsx":"20","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\home_Pages\\Home.jsx":"21","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ui\\Logo.jsx":"22","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ui\\NavItem.jsx":"23","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\MobileMenu.jsx":"24","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ui\\InputField.jsx":"25","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ui\\RoleSelector.jsx":"26","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\utils\\validators.jsx":"27","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Loader.jsx":"28"},{"size":355,"mtime":1745591584682,"results":"29","hashOfConfig":"30"},{"size":2917,"mtime":1745669525641,"results":"31","hashOfConfig":"30"},{"size":6914,"mtime":1745666233805,"results":"32","hashOfConfig":"30"},{"size":4065,"mtime":1745667972861,"results":"33","hashOfConfig":"30"},{"size":3861,"mtime":1745667885280,"results":"34","hashOfConfig":"30"},{"size":6439,"mtime":1745667333219,"results":"35","hashOfConfig":"30"},{"size":5979,"mtime":1745667223874,"results":"36","hashOfConfig":"30"},{"size":1354,"mtime":1745568792087,"results":"37","hashOfConfig":"30"},{"size":3812,"mtime":1745677349957,"results":"38","hashOfConfig":"30"},{"size":4852,"mtime":1745737755100,"results":"39","hashOfConfig":"30"},{"size":6144,"mtime":1745738198786,"results":"40","hashOfConfig":"30"},{"size":8663,"mtime":1745667464345,"results":"41","hashOfConfig":"30"},{"size":4987,"mtime":1745667532882,"results":"42","hashOfConfig":"30"},{"size":3178,"mtime":1745662616902,"results":"43","hashOfConfig":"30"},{"size":4591,"mtime":1745667706555,"results":"44","hashOfConfig":"30"},{"size":3405,"mtime":1745666034127,"results":"45","hashOfConfig":"30"},{"size":3777,"mtime":1745666955834,"results":"46","hashOfConfig":"30"},{"size":3343,"mtime":1745666797027,"results":"47","hashOfConfig":"30"},{"size":8560,"mtime":1745666470099,"results":"48","hashOfConfig":"30"},{"size":5565,"mtime":1745667129197,"results":"49","hashOfConfig":"30"},{"size":5857,"mtime":1745659650288,"results":"50","hashOfConfig":"30"},{"size":248,"mtime":1745736995594,"results":"51","hashOfConfig":"30"},{"size":762,"mtime":1745676708012,"results":"52","hashOfConfig":"30"},{"size":530,"mtime":1745676948422,"results":"53","hashOfConfig":"30"},{"size":598,"mtime":1745676595462,"results":"54","hashOfConfig":"30"},{"size":745,"mtime":1745676610128,"results":"55","hashOfConfig":"30"},{"size":522,"mtime":1745737315930,"results":"56","hashOfConfig":"30"},{"size":415,"mtime":1745676643897,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1mryx2m",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\index.js",[],[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\App.js",["149"],[],"import React from \"react\";\r\n\r\nimport {Route, Routes, BrowserRouter} from 'react-router-dom'\r\nimport Register from \"./components/authentication/register\";\r\nimport Login from \"./components/authentication/login\";\r\nimport Profile from \"./components/Profile/profile\";\r\nimport Header from \"./components/header\";\r\nimport Admin from \"./components/home_Pages/Admin\";\r\nimport Products from \"./components/home_Pages/Products\";\r\nimport Productinfo from \"./components/ProductInfo/productinfo\";\r\nimport Cart from \"./components/ProductInfo/cart\";\r\nimport OrderHistory from \"./components/ProductInfo/orderHistory\";\r\nimport ViewOrders from \"./components/ProductInfo/viewOrders\";\r\nimport RateForm from \"./components/rate&Review/RateForm\";\r\nimport AddProducts from \"./components/products/addProduct\";\r\nimport UpdateProducts from \"./components/products/updateProduct\";\r\nimport UpdateACC from \"./components/Profile/updateProfile\";\r\nimport UpdatePWD from \"./components/Profile/updatePWD\";\r\nimport AddPayment from \"./components/payment/dummyPayment\";\r\nimport RateFormSeller from \"./components/rate&Review/RateFormSeller\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Home from \"./components/home_Pages/Home\";\r\n\r\n\r\nconst App = () => {\r\n\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n  const role = useSelector((state) => state.auth.role); \r\n  console.log(isLoggedIn);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n  <Header />\r\n  <Routes>\r\n    <Route path=\"/signUp\" element={<Register />} />\r\n    <Route path=\"/login\" element={<Login />} />\r\n    <Route path=\"/\" element={<Home />} />\r\n    <Route path=\"/products\" element={<Products />} />\r\n    {isLoggedIn && <Route path=\"/profile\" element={<Profile />} />}\r\n    {isLoggedIn && role === \"seller\" && (\r\n      <Route path=\"/addProduct\" element={<AddProducts />} />\r\n    )}\r\n    {isLoggedIn && role === \"seller\" && (\r\n      <Route path=\"/updateProduct/:id\" element={<UpdateProducts />} />\r\n    )}\r\n    {isLoggedIn && role === \"buyer\" && (\r\n      <Route path=\"/cart\" element={<Cart />} />\r\n    )}\r\n    {isLoggedIn && role === \"buyer\" && (\r\n      <Route path=\"/getOrders\" element={<OrderHistory />} />\r\n    )}\r\n    {isLoggedIn && role === \"admin\" && (\r\n      <Route path=\"/admin\" element={<Admin />} />\r\n    )}\r\n    {isLoggedIn && role === \"admin\" && (\r\n      <Route path=\"/admin/viewOrders\" element={<ViewOrders />} />\r\n    )}\r\n    {isLoggedIn && (\r\n      <Route path=\"/rateProduct/:id\" element={<RateForm />} />\r\n    )}\r\n    {isLoggedIn && (\r\n      <Route path=\"/rateSeller/:sellerName/:id\" element={<RateFormSeller />} />\r\n    )}\r\n    {isLoggedIn && (\r\n      <Route path=\"/updateUser/:id\" element={<UpdateACC />} />\r\n    )}\r\n    {isLoggedIn && (\r\n      <Route path=\"/updatePWD/:id\" element={<UpdatePWD />} />\r\n    )}\r\n    {isLoggedIn && (\r\n      <Route path=\"/dummyPayment\" element={<AddPayment />} />\r\n    )}\r\n  </Routes>\r\n</BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\payment\\dummyPayment.jsx",["150","151"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AddPayment() {\r\n  const cart = useSelector((state) => state.cart);\r\n  const [payments, setPayments] = useState({\r\n    email: \"\",\r\n    mobile: \"\",\r\n    number: \"\",\r\n    expiration: \"\",\r\n    cvv: \"\",\r\n    name: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const handleChangeText = (name, value) => {\r\n    setPayments({ ...payments, [name]: value.target.value });\r\n  };\r\n\r\n  const newPayment = {\r\n    email: payments.email,\r\n    mobile: payments.mobile,\r\n    card: {\r\n      number: payments.number,\r\n      expiration: payments.expiration,\r\n      cvv: payments.cvv,\r\n      name: payments.name,\r\n    },\r\n    amount: payments.amount,\r\n  };\r\n\r\n  const AddPayment = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // 1. Make dummy payment\r\n      const paymentRes = await axios.post(\r\n        \"http://localhost:8500/payment/card\",\r\n        newPayment,\r\n        { withCredentials: true }\r\n      );\r\n      swal.fire(`Payment Successful`);\r\n\r\n      // 2. Now create the order (just like Stripe flow)\r\n      const orderData = {\r\n        products: cart.products.map((product) => ({\r\n          productId: product._id,\r\n          name: product.name,\r\n          quantity: product.quantity,\r\n        })),\r\n        amount: cart.withCommision,\r\n        status: \"pending\",\r\n      };\r\n      const orderRes = await axios.post(\r\n        \"http://localhost:8020/Order/addOrder\",\r\n        orderData,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      // 3. Navigate to order history or show success\r\n      navigate(\"/getOrders\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      swal.fire(`Payment or Order Failed`);\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\r\n      <div className=\"bg-white shadow-lg rounded-lg p-8 w-full max-w-lg\">\r\n        <h1 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">\r\n          Payment\r\n        </h1>\r\n        <form onSubmit={AddPayment} className=\"space-y-6\">\r\n          {/* Email and Mobile */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"block text-gray-700 font-medium mb-2\"\r\n              >\r\n                Email\r\n              </label>\r\n              <input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"email\", val)}\r\n                className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"mobile\"\r\n                className=\"block text-gray-700 font-medium mb-2\"\r\n              >\r\n                Mobile\r\n              </label>\r\n              <input\r\n                name=\"mobile\"\r\n                type=\"number\"\r\n                placeholder=\"Mobile\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"mobile\", val)}\r\n                className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Credit Card Details */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"number\"\r\n                className=\"block text-gray-700 font-medium mb-2\"\r\n              >\r\n                Credit Card Number\r\n              </label>\r\n              <input\r\n                name=\"number\"\r\n                type=\"text\"\r\n                placeholder=\"xxxx xxxx xxxx xxxx\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"number\", val)}\r\n                className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"expiration\"\r\n                className=\"block text-gray-700 font-medium mb-2\"\r\n              >\r\n                Expiration Date\r\n              </label>\r\n              <input\r\n                name=\"expiration\"\r\n                type=\"text\"\r\n                placeholder=\"MM/YY\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"expiration\", val)}\r\n                className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"cvv\"\r\n                className=\"block text-gray-700 font-medium mb-2\"\r\n              >\r\n                CVV\r\n              </label>\r\n              <input\r\n                name=\"cvv\"\r\n                type=\"number\"\r\n                placeholder=\"CVV\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"cvv\", val)}\r\n                className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"name\"\r\n                className=\"block text-gray-700 font-medium mb-2\"\r\n              >\r\n                Name on Card\r\n              </label>\r\n              <input\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                required\r\n                onChange={(val) => handleChangeText(\"name\", val)}\r\n                className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Amount */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"amount\"\r\n              className=\"block text-gray-700 font-medium mb-2\"\r\n            >\r\n              Amount (Rs.)\r\n            </label>\r\n            <input\r\n              name=\"amount\"\r\n              type=\"number\"\r\n              placeholder=\"Amount\"\r\n              required\r\n              onChange={(val) => handleChangeText(\"amount\", val)}\r\n              className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition duration-200\"\r\n          >\r\n            Submit Payment\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\rate&Review\\RateFormSeller.jsx",["152"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst RateFormSeller = () => {\r\n  const [rateType, setRateType] = useState(\"seller\");\r\n  const [rateId, setRateId] = useState(\"\");\r\n  const [rateValue, setRateValue] = useState(0);\r\n  const [review, setReview] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const { sellerName, id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setRateId(id);\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"rateHead\").innerHTML = `\r\n      Rate ${rateType} <br />\r\n      ${rateType}Id: ${rateId}\r\n    `;\r\n  }, [rateType, rateId]);\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"rateValue\").innerHTML = `\r\n      Rate for: ${rateType} <br />\r\n      Rating: ${rateValue} <br />\r\n      Review: ${review}\r\n    `;\r\n  }, [rateType, rateId, rateValue, review]);\r\n\r\n  const submitData = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (rateValue !== 0) {\r\n      const reviewData = {\r\n        seller_id: id,\r\n        rate: rateValue,\r\n        reviews: review,\r\n      };\r\n      const response = await axios.post(\r\n        \"http://localhost:8079/review/addReview\",\r\n        reviewData,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      if (response.status === 201) {\r\n        swal(\r\n          {\r\n            title: \"Successful\",\r\n            text: \"Rate and Review was added successfully\",\r\n            icon: \"success\",\r\n          },\r\n          navigate(\"/products\")\r\n        );\r\n      } else {\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Rate posting failed\",\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    } else {\r\n      swal({\r\n        title: \"Invalid\",\r\n        text: \"Rate is required. Please select from stars\",\r\n        icon: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-8\">\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"bg-white shadow-md rounded-lg p-6 max-w-lg mx-auto\">\r\n          <h2\r\n            id=\"rateHead\"\r\n            className=\"text-2xl font-bold text-gray-800 mb-4 text-center\"\r\n          >\r\n            Rate Seller\r\n          </h2>\r\n          <p id=\"rateValue\" className=\"text-gray-600 text-center mb-4\"></p>\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-4 text-center\">\r\n            Seller Name: {sellerName}\r\n          </h3>\r\n          <form onSubmit={submitData} className=\"space-y-6\">\r\n            {/* Rating Stars */}\r\n            <div className=\"flex justify-center\">\r\n              <ReactStars\r\n                count={5}\r\n                value={rateValue}\r\n                onChange={(value) => setRateValue(value)}\r\n                size={50}\r\n                activeColor=\"#ffd700\"\r\n              />\r\n            </div>\r\n\r\n            {/* Comment Section */}\r\n            <div>\r\n              <label\r\n                htmlFor=\"review\"\r\n                className=\"block text-gray-700 font-medium mb-2\"\r\n              >\r\n                Add Comment\r\n              </label>\r\n              <textarea\r\n                id=\"review\"\r\n                name=\"review\"\r\n                value={review}\r\n                onChange={(event) => setReview(event.target.value)}\r\n                className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                rows=\"4\"\r\n                placeholder=\"Write your review here...\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <div className=\"flex justify-center\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition duration-200\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RateFormSeller;","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\rate&Review\\RateForm.jsx",["153"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst RateForm = () => {\r\n  const [rateType, setRateType] = useState(\"product\");\r\n  const [rateId, setRateId] = useState(\"\");\r\n  const [rateValue, setRateValue] = useState(0);\r\n  const [review, setReview] = useState(\"\");\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setRateId(id);\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"rateHead\").innerHTML = `\r\n      Rate ${rateType} <br />\r\n      ${rateType}Id: ${rateId}\r\n    `;\r\n  }, [rateType, rateId]);\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"rateValue\").innerHTML = `\r\n      Rate for: ${rateType} <br />\r\n      Rating: ${rateValue} <br />\r\n      Review: ${review}\r\n    `;\r\n  }, [rateType, rateId, rateValue, review]);\r\n\r\n  const submitData = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (rateValue !== 0) {\r\n      const reviewData = {\r\n        product_id: id,\r\n        rate: rateValue,\r\n        reviews: review,\r\n      };\r\n      const response = await axios.post(\r\n        \"http://localhost:8079/review/addReview\",\r\n        reviewData,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      if (response.status === 201) {\r\n        swal({\r\n          title: \"Successful\",\r\n          text: \"Rate and Review was added successfully\",\r\n          icon: \"success\",\r\n        });\r\n      } else {\r\n        console.log(\"error\");\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Rate posting failed\",\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    } else {\r\n      console.log(\"Rate cannot be null\");\r\n      swal({\r\n        title: \"Invalid\",\r\n        text: \"Rate is required. Please select from stars\",\r\n        icon: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-8\">\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"bg-white shadow-md rounded-lg p-6 max-w-lg mx-auto\">\r\n          <h2\r\n            id=\"rateHead\"\r\n            className=\"text-2xl font-bold text-gray-800 mb-4 text-center\"\r\n          >\r\n            Rate\r\n          </h2>\r\n          <p id=\"rateValue\" className=\"text-gray-600 text-center mb-4\"></p>\r\n          <form onSubmit={submitData} className=\"space-y-6\">\r\n            {/* Rating Stars */}\r\n            <div className=\"flex justify-center\">\r\n              <ReactStars\r\n                count={5}\r\n                value={rateValue}\r\n                onChange={(value) => setRateValue(value)}\r\n                size={50}\r\n                activeColor=\"#ffd700\"\r\n              />\r\n            </div>\r\n\r\n            {/* Comment Section */}\r\n            <div>\r\n              <label\r\n                htmlFor=\"review\"\r\n                className=\"block text-gray-700 font-medium mb-2\"\r\n              >\r\n                Add Comment\r\n              </label>\r\n              <textarea\r\n                id=\"review\"\r\n                name=\"review\"\r\n                value={review}\r\n                onChange={(event) => setReview(event.target.value)}\r\n                className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                rows=\"4\"\r\n                placeholder=\"Write your review here...\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <div className=\"flex justify-center\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition duration-200\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RateForm;","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\products\\updateProduct.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\products\\addProduct.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Store\\index.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\header.jsx",["154","155"],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\authentication\\login.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\authentication\\register.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Profile\\profile.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Profile\\updateProfile.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\home_Pages\\Admin.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Profile\\updatePWD.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\home_Pages\\Products.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ProductInfo\\productinfo.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ProductInfo\\orderHistory.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ProductInfo\\cart.jsx",["156","157"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst KEY =\r\n  \"pk_test_51Q5kUrKs4ldJ96PWJsuoDCG9WwlLqb5rS6eBXsrdEGMMifKnRIrabnhta1MvPcabDAZEsuf3lK4V3I01d7eUcvWp00o91jsc6s\";\r\n\r\nconst Cart = () => {\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const [stripeToken, setStripeToken] = useState(null);\r\n  const [deliveryType, setDeliveryType] = useState();\r\n  const [address, setAddress] = useState(\"\");\r\n  const [cheapDelivery, setCheapDelivery] = useState();\r\n  const [fastDelivery, setFastDelivery] = useState();\r\n  const [deliveryCharge, setDeliveryCharge] = useState();\r\n  const [finalTotal, setFinalTotal] = useState();\r\n  const [cheapDeliveryTime, setCheapDeliveryTime] = useState();\r\n  const [fastDeliveryTime, setFastDeliveryTime] = useState();\r\n  const [visibility, setVisibility] = useState(false);\r\n\r\n  const getDeliveryPrices = async () => {\r\n    const randomWeight = Math.random() * 4.9 + 1.0;\r\n\r\n    const deliveryData = {\r\n      shipfrom: \"Colombo\",\r\n      shipto: address,\r\n      weight: randomWeight,\r\n    };\r\n\r\n    const deliveryResult = await axios.post(\r\n      \"http://localhost:8300/delivery/rate\",\r\n      deliveryData\r\n    );\r\n    setVisibility(true);\r\n\r\n    setCheapDelivery(deliveryResult.data.cheapDelivery.rate / 10);\r\n    setFastDelivery(deliveryResult.data.fastDelivery.rate / 10);\r\n    setCheapDeliveryTime(deliveryResult.data.cheapDelivery.duration);\r\n    setFastDeliveryTime(deliveryResult.data.fastDelivery.duration);\r\n  };\r\n\r\n  const handleOptionChange = (event) => {\r\n    setDeliveryType(event.target.value);\r\n    setDeliveryCharge(\r\n      event.target.value === \"fast\" ? fastDelivery : cheapDelivery\r\n    );\r\n    setFinalTotal(cart.withCommision + deliveryCharge);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setFinalTotal(cart.withCommision);\r\n  }, [cheapDelivery, fastDelivery, address, deliveryCharge]);\r\n\r\n  const onToken = (token) => {\r\n    setStripeToken(token);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const makeRequest = async () => {\r\n      try {\r\n        const res = await axios.post(\"http://localhost:8020/Order/payment\", {\r\n          tokenId: stripeToken.id,\r\n          amount: cart.total,\r\n        });\r\n\r\n        console.log(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    stripeToken && makeRequest();\r\n  }, [stripeToken, cart.total]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const orderData = {\r\n      products: cart.products.map((product) => ({\r\n        productId: product._id,\r\n        name: product.name,\r\n        quantity: product.quantity,\r\n      })),\r\n      amount: cart.withCommision,\r\n      status: \"pending\",\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:8020/Order/addOrder\",\r\n        orderData\r\n      );\r\n      console.log(orderData);\r\n      console.log(res.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-8\">\r\n      <div className=\"container mx-auto px-4\">\r\n        <h1 className=\"text-3xl font-bold text-center text-gray-800 mb-6\">\r\n          Shopping Cart\r\n        </h1>\r\n\r\n        {/* Cart Table */}\r\n        <div className=\"overflow-x-auto bg-white shadow-md rounded-lg p-6\">\r\n          <table className=\"min-w-full\">\r\n            <thead className=\"bg-gray-200\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-sm font-medium text-gray-700 uppercase\">\r\n                  Product\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-sm font-medium text-gray-700 uppercase\">\r\n                  Quantity\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-sm font-medium text-gray-700 uppercase\">\r\n                  Price\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"divide-y divide-gray-200\">\r\n              {cart.products.map((product, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-800\">\r\n                    {product.name}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-800\">\r\n                    {product.quantity}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-800\">\r\n                    {product.quantity} x {product.price}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Delivery Options */}\r\n        <div className=\"mt-8\">\r\n          <h2 className=\"text-xl font-bold text-gray-800 mb-4\">\r\n            Delivery Options\r\n          </h2>\r\n          <div className=\"flex items-center gap-4\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your address\"\r\n              className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={getDeliveryPrices}\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition\"\r\n            >\r\n              Get Prices\r\n            </button>\r\n          </div>\r\n\r\n          {visibility && (\r\n            <div className=\"mt-4\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"fastDelivery\"\r\n                  name=\"delivery\"\r\n                  value=\"fast\"\r\n                  checked={deliveryType === \"fast\"}\r\n                  onChange={handleOptionChange}\r\n                  className=\"focus:ring-blue-500\"\r\n                />\r\n                <label htmlFor=\"fastDelivery\" className=\"text-gray-700\">\r\n                  Fast Delivery: Rs.{fastDelivery}, {fastDeliveryTime} hrs\r\n                </label>\r\n              </div>\r\n              <div className=\"flex items-center gap-4 mt-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"cheapDelivery\"\r\n                  name=\"delivery\"\r\n                  value=\"cheap\"\r\n                  checked={deliveryType === \"cheap\"}\r\n                  onChange={handleOptionChange}\r\n                  className=\"focus:ring-blue-500\"\r\n                />\r\n                <label htmlFor=\"cheapDelivery\" className=\"text-gray-700\">\r\n                  Cheap Delivery: Rs.{cheapDelivery}, {cheapDeliveryTime} days\r\n                </label>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Order Summary */}\r\n        <div className=\"mt-8 bg-white shadow-md rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-bold text-gray-800 mb-4\">\r\n            Order Summary\r\n          </h2>\r\n          <div className=\"flex justify-between text-gray-700\">\r\n            <span>Cart Total:</span>\r\n            <span>Rs. {cart.total}</span>\r\n          </div>\r\n          <div className=\"flex justify-between text-gray-700\">\r\n            <span>With Commission:</span>\r\n            <span>Rs. {cart.withCommision}</span>\r\n          </div>\r\n          <div className=\"flex justify-between text-gray-700\">\r\n            <span>Delivery Charges:</span>\r\n            <span>Rs. {deliveryCharge || 0}</span>\r\n          </div>\r\n          <div className=\"flex justify-between font-bold text-gray-800\">\r\n            <span>Total:</span>\r\n            <span>Rs. {finalTotal || cart.withCommision}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Checkout Buttons */}\r\n        <div className=\"mt-8 flex gap-4\">\r\n          <StripeCheckout\r\n            name=\"Engada Kada Shop\"\r\n            description={`Your total is Rs. ${cart.total}`}\r\n            amount={cart.total * 100}\r\n            token={onToken}\r\n            stripeKey={KEY}\r\n          >\r\n            <button className=\"bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition\">\r\n              Checkout with Stripe\r\n            </button>\r\n          </StripeCheckout>\r\n          <button\r\n            onClick={() => navigate(\"/dummyPayment\")}\r\n            className=\"bg-yellow-500 text-white px-4 py-2 rounded-lg hover:bg-yellow-600 transition\"\r\n          >\r\n            Checkout with Dummy\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;","A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ProductInfo\\viewOrders.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\home_Pages\\Home.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ui\\Logo.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ui\\NavItem.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\MobileMenu.jsx",[],[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ui\\InputField.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\ui\\RoleSelector.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\utils\\validators.jsx",[],[],"A:\\Projects\\Y3S2-DS-Project\\Y3S2-WE-35\\frontend\\src\\components\\Loader.jsx",[],[],{"ruleId":"158","severity":1,"message":"159","line":10,"column":8,"nodeType":"160","messageId":"161","endLine":10,"endColumn":19},{"ruleId":"158","severity":1,"message":"162","line":39,"column":13,"nodeType":"160","messageId":"161","endLine":39,"endColumn":23},{"ruleId":"158","severity":1,"message":"163","line":56,"column":13,"nodeType":"160","messageId":"161","endLine":56,"endColumn":21},{"ruleId":"158","severity":1,"message":"164","line":8,"column":20,"nodeType":"160","messageId":"161","endLine":8,"endColumn":31},{"ruleId":"158","severity":1,"message":"164","line":8,"column":20,"nodeType":"160","messageId":"161","endLine":8,"endColumn":31},{"ruleId":"158","severity":1,"message":"165","line":2,"column":27,"nodeType":"160","messageId":"161","endLine":2,"endColumn":36},{"ruleId":"158","severity":1,"message":"166","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":57,"column":6,"nodeType":"169","endLine":57,"endColumn":60,"suggestions":"170"},{"ruleId":"158","severity":1,"message":"171","line":80,"column":9,"nodeType":"160","messageId":"161","endLine":80,"endColumn":21},"no-unused-vars","'Productinfo' is defined but never used.","Identifier","unusedVar","'paymentRes' is assigned a value but never used.","'orderRes' is assigned a value but never used.","'setRateType' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cart.withCommision'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'handleSubmit' is assigned a value but never used.",{"desc":"173","fix":"174"},"Update the dependencies array to be: [cheapDelivery, fastDelivery, address, deliveryCharge, cart.withCommision]",{"range":"175","text":"176"},[2001,2055],"[cheapDelivery, fastDelivery, address, deliveryCharge, cart.withCommision]"]